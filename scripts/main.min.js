/*
 *  Alphabet
 */
(function ($) {
  'use strict';

  var mediaMapJson = {};
  var language = 'en-US';
  var voice = null;
  var sound = null;
  var spoken = null;
  var effect = null;
  var touch_enabled = true;

  var change_sound = function (language) {
    sound = new Howl({
      urls: ['./sounds/' + language + '/' + voice + '/alphabet.mp3'],
      sprite: alphabetJson.language[language].voice[voice].sprite,
      autoplay: false,
      loop: false,
      onend: function () {
      }
    });
  };

  var show_picture = function (character) {
    var mediaMap = mediaMapJson.language[language].voice[voice][character.toLowerCase()];
    var media = mediaMap[Math.floor(Math.random() * mediaMap.length)];

    $('#picture .preview img').attr('src', './images/pictures/' + media['picture']);
    $('#picture .caption').html(media['word']);

    effect = new Howl({
      urls: ['sounds/effects/' + media['effect']],
      onend: function () {
        $('#picture').fadeOut();
      },
    });

    spoken = new Howl({
      urls: ['./sounds/' + language + '/' + voice + '/' + media['spoken']],
      onend: function () {
        effect.play();
      },
      // In case of error loading the sound, move on.
      onloaderror: function () {
        effect.play();
      }
    });
    spoken.play();

    $('#picture').fadeIn();
  };

  var set_language = function (lang) {
    language = lang;
    $('body').removeClass();
    $('body').addClass(language.toLowerCase());

    change_sound(language);
  };

  var set_voice = function (person) {
    voice = person;
    change_sound(language);
  };

  var set_characters = function (type) {
    // Clean buttons.
    $('.character').remove();

    switch (type) {
      case 'letters':
        var chars = (function () {
          var output = [];
          for (var i = 'A'.charCodeAt(0); i <= 'Z'.charCodeAt(0); i++)
            output.push(String.fromCharCode(i));
          return output;
        })();
        break;

      case 'numbers':
        var chars = (function () {
          var output = [];
          for (var i = '1'; i <= '9'; i++)
            output.push(String(i));
          output.push(String(0));
          return output;
        })();
        break;
    }

    var i = 0;
    $.each(chars, function (b, val) {
      // Change background colors.
      if (i <= 5) {
        i++;
      }
      else {
        i = 1;
      }

      var html = '<span class="character ' + val + ' c' + i + ' outline">' + val + '</span>';
      $('#characters').append(html).find('.character.' + val).touchstart(function (i) {
        if (touch_enabled == true) {
          touch_enabled = false;
          $(this).hide().fadeIn('fast', function () {
            button_clicked(this.innerHTML);
          });
        }
      });

    });
  };

  var button_clicked = function (character) {
    // Override onend().
    sound._onend[0] = function () {
      show_picture(character);
      // Timer to enable touch again.
      setTimeout(
        function () {
          touch_enabled = true;
        }, 2000
      );
    }
    sound.play(character.toLowerCase(), function () {
    });
  };

  var init = function () {
    $(document).ready(function () {
      // Load media config.
      $.getJSON( "./mediamap.json", function( data ) {
        mediaMapJson = data;
      });

      set_characters('letters');
      set_voice('ann');
      set_language('pt-BR');

      // Picture preview close.
      $('.picture-wrapper').click(function () {
        if (touch_enabled == true) {
          $('#picture').hide();
          spoken.stop();
          effect.stop();
        }
      });

      // Settings page.
      $('.setting-button').click(function () {
        $('#characters').hide();
        $('#settings').show();
      });

      $('.close-settings-button').click(function () {
        $('#characters').show();
        $('#settings').hide();
      });

      $('input:radio').change(
        function () {
          switch (this.name) {
            case 'language':
              set_language(this.value);
              break;

            case 'voice':
              set_voice(this.value);
              break;

            case 'characters':
              set_characters(this.value);
              break;
          }
        }
      );
    });
  };

  init();

})(jQuery);
