/*
 *  Alphabet
 */
(function ($) {
  'use strict';

  var mediaMapJson = {};
  var alphabetJson = {};
  var language = 'pt-BR';
  var voice = null;
  var sound = null;
  var spoken = null;
  var effect = null;
  var character_touched = '';

  var change_sound = function (language) {
    if (typeof alphabetJson.language[language].voice[voice] == 'object') {
      var sprite = alphabetJson.language[language].voice[voice].sprite;
      sound = new Howl({
        urls: ['./sounds/' + language + '/' + voice + '/alphabet.mp3'],
        sprite: sprite,
        autoplay: false,
        loop: false,
        onend: function () {},
        onloaderror: function () {
          console.log('Not found ' + sprite)
        }
      });
    }
    else {
      console.log('Disable option ' + language + ' ' + voice);
    }
  };

  var show_picture = function (character) {
    var mediaMap = mediaMapJson.language[language].voice[voice][character.toLowerCase()];
    if (typeof mediaMap == 'undefined') {
      return false;
    }
    var media = mediaMap[Math.floor(Math.random() * mediaMap.length)];

    $('#picture .preview img').attr('src', './images/pictures/' + media['picture']); 
    $('#picture .caption').html(media['word']);
    $('#picture').show();

    var is_for = new Howl({
      urls: ['./sounds/' + language + '/' + voice + '/is_for.mp3'],
      onend: function () {
        if (character_touched != '') {
          spoken.play();
        }
      },
    });

    effect = new Howl({
      urls: ['./sounds/effects/' + media['effect']],
      onend: function () {
      },
    });

    spoken = new Howl({
      urls: ['./sounds/' + language + '/' + voice + '/' + media['spoken']],
      onend: function () {
        if (character_touched != '') {
          effect.play();
        }
      },
      // In case of error loading the sound, move on.
      onloaderror: function () {
        if (character_touched != '') {
          effect.play();
        }
      }
    });

    if (character_touched != '') {
      is_for.play();
    }
    return true;
  };

  var set_language = function (lang) {
    language = lang;
    $('body').removeClass();
    $('body').addClass(language.toLowerCase());

    change_sound(language);
  };

  var set_voice = function (person) {
    voice = person;
    change_sound(language);
  };

  var set_characters = function (type) {
    // Clean buttons.
    $('.character').remove();

    switch (type) {
      case 'letters':
        var chars = (function () {
          var output = [];
          for (var i = 'A'.charCodeAt(0); i <= 'Z'.charCodeAt(0); i++)
            output.push(String.fromCharCode(i));
          return output;
        })();
        break;

      case 'numbers':
        var chars = (function () {
          var output = [];
          for (var i = 0; i <= 19; i++)
            output.push(String(i));
          for (var i = 2; i <= 9; i++)
            output.push(String(i) + '0');
          return output;
        })();
        break;
    }

    var i = 0;
    $.each(chars, function (b, val) {
      // Change background colors.
      if (i <= 5) {
        i++;
      }
      else {
        i = 1;
      }

      var html = '<a href="#picture" data-rel="character" data-transition="flip" class="character-wrapper"><span class="character ' + val + ' c' + i + ' outline">' + val + '</span></a>';
      $('#play').append(html);
    });

    // Listener for clicks on characters.
    $('#play .character').touchstart(function (i) {
      $(this).hide().fadeIn('fast', function () {
        character_touched = this.innerHTML;
      });
    });
  };

  var init = function () {
    $(document).ready(function () {
      // Load media config.
      $.ajax({
        url: './mediamap.json',
        async: false,
        dataType: 'json',
        success: function (json) {
          mediaMapJson = json;
        }
      });

      // Load alphabet config.
      $.ajax({
        url: './sounds/alphabet.json',
        async: false,
        dataType: 'json',
        success: function (json) {
          alphabetJson = json;
        }
      });

      set_characters('letters');
      set_voice('marc');
      set_language('pt-BR');

      // Hide image, letter and word before page is shown.
      $("#picture").on("pagebeforeshow", function(event) {
        $('#picture .preview img').attr('src', './images/pictures/no-image.jpg'); 
        $('#picture .big-letter').html('');
        $('#picture .caption').html('');
      });

      // Show image and play sounds when page shows.
      $("#picture").on("pageshow", function(event) {
         // Override onend().
        sound._onend[0] = function () {
          if (show_picture(character_touched)) {
            $('#picture .big-letter').html(character_touched);
          }
        }
        sound.play(character_touched.toLowerCase(), function () {
        });

      });

      $('#picture img').touchstart(function () {
          //effect.play();
      });

      $('#picture .caption').touchstart(function () {
          spoken.play();
      });

      $('#picture .big-letter').touchstart(function () {
        var character = $('#picture .big-letter').html();
        sound.play(character.toLowerCase());
      });

      // Picture preview close.
      $('#picture .back-button').touchstart(function () {
          character_touched = '';
          spoken.stop();
          effect.stop();
          sound.stop();
      });

      $('.close-settings-button').touchstart(function () {
        // Save settings.
      });

      $('input:radio').change(
        function () {
          switch (this.name) {
            case 'language':
              set_language(this.value);
              break;

            case 'voice':
              set_voice(this.value);
              break;

            case 'characters':
              set_characters(this.value);
              break;
          }
        }
      );
    });
  };

  init();

})(jQuery);
